# Установка БД
- name: Linux config
  hosts: db
  tasks:
  - name: Postgresql package download
    package:
     name: postgresql, postgresql-contrib
     state: present
   
  - name: Prepare DB - user configuration
    command: "{{item}}"
    loop:
    - sudo -u postgres createuser -dls admin
    - sudo -u postgres psql -c "ALTER USER admin WITH PASSWORD 'Passw0rd_';"
    - 'sudo -u postgres psql -c "CREATE DATABASE admin;"'
  
  - name: Prepare DB - Allow to connect
    command: "{{item}}"
    loop:
    - echo "listen_addresses = '*'" >> /etc/postgresql/12/main/postgresql.conf
    - echo "host all all 0.0.0.0/0 md5" >> /etc/postgresql/12/main/pg_hba.conf
    
# Создание сертификата    
- name: OpenSSL certificate generation
  hosts: web1
  tasks:
  
  - name: '/opt/ca/certificate.crt'
    cmd: mkdir /opt/ca/
  
  - openssl_privatekey:
    path: /opt/ca/private.key
    size: 2048 

  - openssl_csr:
    path: /opt/ca/request.csr
    privatekey_path: /opt/ca/private.key
    common_name: '*.unakbars.ru'

  - openssl_certificate:
    provider: selfsigned
    path: /opt/ca/certificate.crt
    privatekey_path: /opt/ca/private.key
    csr_path: /opt/ca/request.csr
    
# Настраиваем NTP    
- name: NTP configuration
  hosts: web1, web2, db
  tasks:
  - name: NTP packages download
    package:
     name: chrony
     state: present
  
  - name: Copy a prepared chrony.conf
    copy:
      src: /opt/chrony.conf
      dest: /etc/chrony/chrony.conf
      owner: root
      group: root
      mode: '0777'
      backup: yes
  
  - name: NTP configure
    command: "{{item}}"
    loop:
    - timedatectl set-timezone Europe/Moscow
    - systemctl restart chrony
     
# Устанавливаем nginx и копируем готовый конфиг
- name: OpenSSL certificate generation
  hosts: web1
  tasks:
  - name: Nginx packets download
    package:
      name: nginx, sshpass
      state: present
  
  - name: Copy a prepared nginx.conf
    copy:
      src: /opt/nginx.conf
      dest: /etc/nginx/nginx.conf
      owner: root
      group: root
      mode: '0777'
      backup: yes
      
  - name: Start nginx proccess
    shell: systemctl start --now nginx
 
# Установка докера
- name: Docker install on WEB1-2
  hosts: web1, web2
  tasks:
  - name: Docker packages download
    shell:
      cmd: "{{item}}"
    loop:
    - sudo apt install apt-transport-https ca-certificates curl software-properties-common
    - wget https://download.docker.com/linux/ubuntu/gpg
    - sudo apt-key add gpg
    - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
    - sudo apt install docker-ce
  
  - name: Application run
    shell:
      cmd: "{{item}}"
    loop:
    - docker load < /opt/responding-app.tar
    - docker run --always -p 5000:5000 --ad_ip_addr 192.168.0.2 --db_conn_string postgresql://admin:Passw0rd_
    